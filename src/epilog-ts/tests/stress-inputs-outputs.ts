

const STRESS_TEST_DATASET_INPUT = "type(aflac_hospital_cash,product)\nproduct.insurer(aflac_hospital_cash,aflac)\nproduct.description(aflac_hospital_cash,\"../sources/aflac/A49100CA.pdf\")\nproduct.rulebase(aflac_hospital_cash,\"../sources/aflac/af9100.hrf\")\ntype(axa_travel_policy,product)\nproduct.insurer(axa_travel_policy,axa)\nproduct.description(axa_travel_policy,\"../sources/axa/axa_travel_policy.pdf\")\nproduct.rulebase(axa_travel_policy,\"../sources/axa/axa_travel_policy.hrf\")\ntype(calcas_auto_insurance,product)\nproduct.insurer(calcas_auto_insurance,calcas)\nproduct.description(calcas_auto_insurance,\"../sources/calcas/forthcoming.txt\")\ntype(chubb_hospital_cash,product)\nproduct.insurer(chubb_hospital_cash,chubb)\nproduct.description(chubb_hospital_cash,\"../sources/chubb/Hospital Cash.pdf\")\nproduct.rulebase(chubb_hospital_cash,\"\")\ntype(codex_plana,product)\nproduct.insurer(codex_plana,codex)\nproduct.description(codex_plana,\"../sources/codex/plans.txt\")\nproduct.rulebase(codex_plana,\"\")\ntype(codex_planb,product)\nproduct.insurer(codex_planb,codex)\nproduct.description(codex_planb,\"../sources/codex/plans.txt\")\nproduct.rulebase(codex_planb,\"\")\ntype(codex_planc,product)\nproduct.insurer(codex_planc,codex)\nproduct.description(codex_planc,\"../sources/codex/plans.txt\")\nproduct.rulebase(codex_planc,\"\")\ntype(codex_pland,product)\nproduct.insurer(codex_pland,codex)\nproduct.description(codex_pland,\"../sources/codex/plans.txt\")\nproduct.rulebase(codex_pland,\"\")\ntype(codex_plane,product)\nproduct.insurer(codex_plane,codex)\nproduct.description(codex_plane,\"../sources/codex/plans.txt\")\nproduct.rulebase(codex_plane,\"\")\ntype(codex_planf,product)\nproduct.insurer(codex_planf,codex)\nproduct.description(codex_planf,\"../sources/codex/plans.txt\")\nproduct.rulebase(codex_planf,\"\")\ntype(codex_plang,product)\nproduct.insurer(codex_plang,codex)\nproduct.description(codex_plang,\"../sources/codex/plans.txt\")\nproduct.rulebase(codex_plang,\"\")\ntype(codex_planh,product)\nproduct.insurer(codex_planh,codex)\nproduct.description(codex_planh,\"../sources/codex/plans.txt\")\nproduct.rulebase(codex_planh,\"\")\ntype(hertz_rental_insurance,product)\nproduct.insurer(hertz_rental_insurance,hertz)\ntype(lifesecure_hospital_cash,product)\nproduct.insurer(lifesecure_hospital_cash,lifesecure)\nproduct.description(lifesecure_hospital_cash,\"../sources/lifesecure/LS-HR-0002 CA 0715.pdf\")\nproduct.rulebase(lifesecure_hospital_cash,\"\")\ntype(visa_signature,product)\nproduct.insurer(visa_signature,visa)\nproduct.description(visa_signature,\"../sources/visa/guide-to-benefits.pdf\")\nproduct.rulebase(visa_signature,\"../sources/visa/visa_signature.hrf\")\ntype(policy1234567821,policy)\npolicy.type(policy1234567821,chubb_hospital_cash)\npolicy.insuree(policy1234567821,steve_squirrel)\npolicy.dependent(policy1234567821,sally_squirrel)\npolicy.dependent(policy1234567821,susan_squirrel)\npolicy.startdate(policy1234567821,2023_01_01)\npolicy.enddate(policy1234567821,2023_12_31)\ntype(policy1234567822,policy)\npolicy.type(policy1234567822,axa_travel_policy)\npolicy.insuree(policy1234567822,sally_squirrel)\npolicy.insuree(policy1234567822,sibyl_squirrel)\npolicy.insuree(policy1234567822,steve_squirrel)\npolicy.insuree(policy1234567822,susan_squirrel)\npolicy.vehicle(policy1234567822,vehicle31)\npolicy.startdate(policy1234567822,2023_01_01)\npolicy.enddate(policy1234567822,2023_12_31)\ntype(policy1234567823,policy)\npolicy.type(policy1234567823,codex_plana)\npolicy.insuree(policy1234567823,steve_squirrel)\npolicy.startdate(policy1234567823,2023_01_01)\npolicy.enddate(policy1234567823,2023_12_31)\ntype(policy1234567824,policy)\npolicy.type(policy1234567824,codex_planb)\npolicy.insuree(policy1234567824,steve_squirrel)\npolicy.startdate(policy1234567824,2023_01_01)\npolicy.enddate(policy1234567824,2023_12_31)\ntype(policy1234567825,policy)\npolicy.type(policy1234567825,codex_planc)\npolicy.insuree(policy1234567825,steve_squirrel)\npolicy.startdate(policy1234567825,2023_01_01)\npolicy.enddate(policy1234567825,2023_12_31)\ntype(policy1234567826,policy)\npolicy.type(policy1234567826,codex_pland)\npolicy.insuree(policy1234567826,steve_squirrel)\npolicy.startdate(policy1234567826,2023_01_01)\npolicy.enddate(policy1234567826,2023_12_31)\ntype(policy1234567830,policy)\npolicy.type(policy1234567830,visa_signature)\npolicy.insuree(policy1234567830,steve_squirrel)\npolicy.startdate(policy1234567830,2023_01_01)\npolicy.enddate(policy1234567830,2023_12_31)\ntype(policy1234567840,policy)\npolicy.type(policy1234567840,visa_signature)\npolicy.insuree(policy1234567840,genesereth)\npolicy.startdate(policy1234567840,2023_01_01)\npolicy.enddate(policy1234567840,2023_12_31)\ntype(claim21,hospitalizationclaim)\nclaim.claimant(claim21,steve_squirrel)\nclaim.date(claim21,2023_11_30)\nclaim.patient(claim21,sally_squirrel)\nclaim.hospital(claim21,johns_hopkins)\nclaim.physician(claim21,kildare)\nclaim.physicianref(claim21,yes)\nclaim.diagnosis(claim21,sprained_ankle)\nclaim.startdate(claim21,2023_08_23)";
const STRESS_TEST_DATASET_OUTPUT = "type(aflac_hospital_cash, product) product.insurer(aflac_hospital_cash, aflac) product.description(aflac_hospital_cash, \"../sources/aflac/A49100CA.pdf\") product.rulebase(aflac_hospital_cash, \"../sources/aflac/af9100.hrf\") type(axa_travel_policy, product) product.insurer(axa_travel_policy, axa) product.description(axa_travel_policy, \"../sources/axa/axa_travel_policy.pdf\") product.rulebase(axa_travel_policy, \"../sources/axa/axa_travel_policy.hrf\") type(calcas_auto_insurance, product) product.insurer(calcas_auto_insurance, calcas) product.description(calcas_auto_insurance, \"../sources/calcas/forthcoming.txt\") type(chubb_hospital_cash, product) product.insurer(chubb_hospital_cash, chubb) product.description(chubb_hospital_cash, \"../sources/chubb/Hospital Cash.pdf\") product.rulebase(chubb_hospital_cash, \"\") type(codex_plana, product) product.insurer(codex_plana, codex) product.description(codex_plana, \"../sources/codex/plans.txt\") product.rulebase(codex_plana, \"\") type(codex_planb, product) product.insurer(codex_planb, codex) product.description(codex_planb, \"../sources/codex/plans.txt\") product.rulebase(codex_planb, \"\") type(codex_planc, product) product.insurer(codex_planc, codex) product.description(codex_planc, \"../sources/codex/plans.txt\") product.rulebase(codex_planc, \"\") type(codex_pland, product) product.insurer(codex_pland, codex) product.description(codex_pland, \"../sources/codex/plans.txt\") product.rulebase(codex_pland, \"\") type(codex_plane, product) product.insurer(codex_plane, codex) product.description(codex_plane, \"../sources/codex/plans.txt\") product.rulebase(codex_plane, \"\") type(codex_planf, product) product.insurer(codex_planf, codex) product.description(codex_planf, \"../sources/codex/plans.txt\") product.rulebase(codex_planf, \"\") type(codex_plang, product) product.insurer(codex_plang, codex) product.description(codex_plang, \"../sources/codex/plans.txt\") product.rulebase(codex_plang, \"\") type(codex_planh, product) product.insurer(codex_planh, codex) product.description(codex_planh, \"../sources/codex/plans.txt\") product.rulebase(codex_planh, \"\") type(hertz_rental_insurance, product) product.insurer(hertz_rental_insurance, hertz) type(lifesecure_hospital_cash, product) product.insurer(lifesecure_hospital_cash, lifesecure) product.description(lifesecure_hospital_cash, \"../sources/lifesecure/LS-HR-0002 CA 0715.pdf\") product.rulebase(lifesecure_hospital_cash, \"\") type(visa_signature, product) product.insurer(visa_signature, visa) product.description(visa_signature, \"../sources/visa/guide-to-benefits.pdf\") product.rulebase(visa_signature, \"../sources/visa/visa_signature.hrf\") type(policy1234567821, policy) policy.type(policy1234567821, chubb_hospital_cash) policy.insuree(policy1234567821, steve_squirrel) policy.dependent(policy1234567821, sally_squirrel) policy.dependent(policy1234567821, susan_squirrel) policy.startdate(policy1234567821, 2023_01_01) policy.enddate(policy1234567821, 2023_12_31) type(policy1234567822, policy) policy.type(policy1234567822, axa_travel_policy) policy.insuree(policy1234567822, sally_squirrel) policy.insuree(policy1234567822, sibyl_squirrel) policy.insuree(policy1234567822, steve_squirrel) policy.insuree(policy1234567822, susan_squirrel) policy.vehicle(policy1234567822, vehicle31) policy.startdate(policy1234567822, 2023_01_01) policy.enddate(policy1234567822, 2023_12_31) type(policy1234567823, policy) policy.type(policy1234567823, codex_plana) policy.insuree(policy1234567823, steve_squirrel) policy.startdate(policy1234567823, 2023_01_01) policy.enddate(policy1234567823, 2023_12_31) type(policy1234567824, policy) policy.type(policy1234567824, codex_planb) policy.insuree(policy1234567824, steve_squirrel) policy.startdate(policy1234567824, 2023_01_01) policy.enddate(policy1234567824, 2023_12_31) type(policy1234567825, policy) policy.type(policy1234567825, codex_planc) policy.insuree(policy1234567825, steve_squirrel) policy.startdate(policy1234567825, 2023_01_01) policy.enddate(policy1234567825, 2023_12_31) type(policy1234567826, policy) policy.type(policy1234567826, codex_pland) policy.insuree(policy1234567826, steve_squirrel) policy.startdate(policy1234567826, 2023_01_01) policy.enddate(policy1234567826, 2023_12_31) type(policy1234567830, policy) policy.type(policy1234567830, visa_signature) policy.insuree(policy1234567830, steve_squirrel) policy.startdate(policy1234567830, 2023_01_01) policy.enddate(policy1234567830, 2023_12_31) type(policy1234567840, policy) policy.type(policy1234567840, visa_signature) policy.insuree(policy1234567840, genesereth) policy.startdate(policy1234567840, 2023_01_01) policy.enddate(policy1234567840, 2023_12_31) type(claim21, hospitalizationclaim) claim.claimant(claim21, steve_squirrel) claim.date(claim21, 2023_11_30) claim.patient(claim21, sally_squirrel) claim.hospital(claim21, johns_hopkins) claim.physician(claim21, kildare) claim.physicianref(claim21, yes) claim.diagnosis(claim21, sprained_ankle) claim.startdate(claim21, 2023_08_23)";


export {
    STRESS_TEST_DATASET_INPUT,
    STRESS_TEST_DATASET_OUTPUT
}